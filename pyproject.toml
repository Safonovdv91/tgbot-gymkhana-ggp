[tool.poetry]
name = "mg-bot"
version = "0.1.0"
description = ""
authors = ["Safonov <Sofik.d@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
aiogram = "^3.8.0"
pymongo = "^4.8.0"
ruff = "^0.5.0"
poetry-plugin-dotenv = "^2.2.3"
pyyaml = "^6.0.1"



[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 99
indent-width = 4
target-version = "py312"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".gitlab",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "alembic",
    "_build",
    "buck-out",
    "build",
    "dist",
    "docker",
    "env",
    "etc",
    "requirements",
    "venv"
]

[tool.ruff.format]
# Аналогично black, двойные кавычки
quote-style = "double"

# Аналогично black, пробелы вместо табов
indent-style = "space"

# Аналогично black, уважаем trailing commas
skip-magic-trailing-comma = false

# Аналогично black, автоматически определяем подходящее окончание строки.
line-ending = "auto"

[tool.ruff.lint]
# Список кодов или префиксов правил, которые следует считать исправляемыми. (https://docs.astral.sh/ruff/settings/#fixable)
# По умолчанию все правила считаются исправляемыми.
fixable = ["I", "RUF022", "RUF023"]
preview = true

# Правила, которые следует добавить к указанным в "select=[]" конфига или "--select" cli-команды
extend-select = [
    # Включил все правила, которые дают определенный профит

    "ASYNC",    # https://docs.astral.sh/ruff/rules/#flake8-async-async
    "A001",     # https://docs.astral.sh/ruff/rules/builtin-variable-shadowing
    "B",        # https://docs.astral.sh/ruff/rules/builtin-argument-shadowing
    "C4",       # https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "C901",     # https://docs.astral.sh/ruff/rules/complex-structure
    "COM818",   # https://docs.astral.sh/ruff/rules/trailing-comma-on-bare-tuple
    "COM819",   # https://docs.astral.sh/ruff/rules/prohibited-trailing-comma
    "D",        # https://docs.astral.sh/ruff/rules/#pydocstyle-d
    "E",        # https://docs.astral.sh/ruff/rules/#error-e
    "FLY",      # https://docs.astral.sh/ruff/rules/#flynt-fly
    "FBT003",   # https://docs.astral.sh/ruff/rules/boolean-positional-value-in-call
    "G",        # https://docs.astral.sh/ruff/rules/#flake8-logging-format-g
    "I",        # https://docs.astral.sh/ruff/rules/#isort-i
    "INP",      # https://docs.astral.sh/ruff/rules/#flake8-no-pep420-inp
    "ISC003",   # https://docs.astral.sh/ruff/rules/explicit-string-concatenation
    "LOG",      # https://docs.astral.sh/ruff/rules/#flynt-fly
    "N",        # https://docs.astral.sh/ruff/rules/#pep8-naming-n
    "PGH",      # https://docs.astral.sh/ruff/rules/#pygrep-hooks-pgh
    "PIE",      # (https://docs.astral.sh/ruff/rules/#flake8-pie-pie)
    "PYI",      # https://docs.astral.sh/ruff/rules/#flake8-pyi-pyi
    "PL",       # https://docs.astral.sh/ruff/rules/#pylint-pl
    "PT",       # https://docs.astral.sh/ruff/rules/#flake8-pytest-style-pt
    "PERF",     # https://docs.astral.sh/ruff/rules/#perflint-perf
    "PLR",      # https://docs.astral.sh/ruff/rules/#flake8-pytest-style-pt
    "RET",      # https://docs.astral.sh/ruff/rules/#flake8-return-ret
    "RSE",      # https://docs.astral.sh/ruff/rules/#flake8-raise-rse
    "RUF",      # https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
    "SIM",      # https://docs.astral.sh/ruff/rules/#flake8-simplify-sim
    "T20",      # https://docs.astral.sh/ruff/rules/#flake8-print-t20
    "TRIO",     # https://docs.astral.sh/ruff/rules/#flake8-trio-trio
    "TRY300",   # https://docs.astral.sh/ruff/rules/try-consider-else
    "TRY302",   # https://docs.astral.sh/ruff/rules/useless-try-except
    "TRY401",   # https://docs.astral.sh/ruff/rules/verbose-log-message
    "UP",       # https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "YTT",      # https://docs.astral.sh/ruff/rules/#flake8-2020-ytt
]


# Правила, которые следует добавить к указанным в "ignore=[]" конфига или "--ignore" команды
extend-ignore = [
    # Могут быть излишними в нашей ситуации
    "D1",       # https://docs.astral.sh/ruff/rules/#pydocstyle-d
    "D205",     # https://docs.astral.sh/ruff/rules/blank-line-after-summary
    "D415",     # https://docs.astral.sh/ruff/rules/ends-in-punctuation

    "PLR2004",  # https://docs.astral.sh/ruff/rules/magic-value-comparison – много ложных срабатываний
    "PLR0904",  # https://docs.astral.sh/ruff/rules/too-many-public-methods – неактуально для нашего аксессорного подхода
    "PLR0917",  # https://docs.astral.sh/ruff/rules/too-many-positional – может оказатся слишком жесткис
    "PLR6201",  # https://docs.astral.sh/ruff/rules/literal-membership – не всегда имеет смысл использовать set
    "PLR6301",  # https://docs.astral.sh/ruff/rules/no-self-use – неактуально для нашего аксессорного подхода
    "PLW1514",  # https://docs.astral.sh/ruff/rules/unspecified-encoding – неактуально для наших проектов
    "PLW1641",  # https://docs.astral.sh/ruff/rules/eq-without-hash – иногда нужен eq без hash
    "PLR0913",  # https://docs.astral.sh/ruff/rules/too-many-arguments – может оказаться слишком жестко для ребят
    "PLR1714",  # https://docs.astral.sh/ruff/rules/repeated-equality-comparison – бывают неадекватные срабатывания
    "PERF203",  # https://docs.astral.sh/ruff/rules/try-except-in-loop – я бы включил, но сами таким грешим, не думаю, что крит

    # нигде не придерживались такого подхода
    "PT004",    # https://docs.astral.sh/ruff/rules/pytest-missing-fixture-name-underscore
    "PT005",    # https://docs.astral.sh/ruff/rules/pytest-incorrect-fixture-name-underscore

    "PT007",    # https://docs.astral.sh/ruff/rules/pytest-parametrize-values-wrong-type – не считаю критичным

    # выключил, чтобы продвигать русский язык
    "RUF001",   # https://docs.astral.sh/ruff/rules/ambiguous-unicode-character-string
    "RUF002",   # https://docs.astral.sh/ruff/rules/ambiguous-unicode-character-docstring
    "RUF003",   # https://docs.astral.sh/ruff/rules/ambiguous-unicode-character-comment

    # не считаю критичным
    "RUF012",   # https://docs.astral.sh/ruff/rules/mutable-class-default
    "RUF021",   # https://docs.astral.sh/ruff/rules/parenthesize-chained-operators


    "SIM105",   # https://docs.astral.sh/ruff/rules/suppressible-exception – я бы включил, но мало кто знает про это и пользуется
    "SIM108",   # https://docs.astral.sh/ruff/rules/if-else-block-instead-of-if-exp – много ложных срабатываний
    "SIM117",   # https://docs.astral.sh/ruff/rules/multiple-with-statements – часто становится хуже

    # не считаю критичным
    "UP012",    # https://docs.astral.sh/ruff/rules/unnecessary-encode-utf8
    "UP015",    # https://docs.astral.sh/ruff/rules/redundant-open-modes

    "UP032",    # https://docs.astral.sh/ruff/rules/f-string – иногда уместнее использовать str.format


    # [!] При использовании Ruff в качестве форматтера, рекомендуется избегать следующих правил:
    # (https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules)
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "COM812",
    "COM819",
    "ISC001",
    "ISC002",
]

[tool.ruff.lint.extend-per-file-ignores]
# PLC0415 https://docs.astral.sh/ruff/rules/import-outside-top-level – мы сами такое используем в некоторых местах
# F403 https://docs.astral.sh/ruff/rules/undefined-local-with-import-star – wildcards в init.py и тестах терпимо
# F405 https://docs.astral.sh/ruff/rules/undefined-local-with-import-star-usage – wildcards в тестах терпимо
# SIM300 https://docs.astral.sh/ruff/rules/yoda-conditions – разрешаем йоду для ассертов

"__init__.py" = ["F403", "PLC0415"]
"routes.py" = ["PLC0415"]
"urls.py" = ["PLC0415"]
"store.py" = ["PLC0415"]
"tests/*.py" = ["SIM300", "F403", "F405", "INP001"]


[tool.ruff.lint.pydocstyle]
# Требуем google-docstring, т.к. на большинстве проектах придерживаемся этого формата
convention = "google"


[tool.ruff.lint.isort]
# Объекдиняем импорты из одного пакета
combine-as-imports = true


[tool.ruff.lint.flake8-unused-arguments]
# Считаем терпимым не использовать *args, **kwargs
ignore-variadic-names = true


[tool.ruff.lint.flake8-pytest-style]
# Делаем единый стиль скобок в тестах
fixture-parentheses = false
mark-parentheses = false
